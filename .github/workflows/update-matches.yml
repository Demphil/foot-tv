name: Update Matches Data
on:
  schedule:
    - cron: '0 */6 * * *'  # كل 6 ساعات
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-matches:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js (without cache)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: false  # تعطيل التخزين المؤقت لتجنب مشكلة lock file

      - name: Initialize Node.js project
        run: |
          mkdir -p data
          echo '{"name":"foot-tv-updater","version":"1.0.0","private":true}' > package.json

      - name: Install Axios directly
        run: npm install axios --no-package-lock --no-save  # تثبيت بدون إنشاء lock file

      - name: Fetch and Update Matches Data
        env:
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
        run: |
          node -e "
          const axios = require('axios');
          const fs = require('fs');
          const today = new Date().toISOString().split('T')[0];
          
          async function fetchMatches() {
            try {
              const response = await axios.get('https://api-football-v1.p.rapidapi.com/v3/fixtures', {
                params: { date: today },
                headers: {
                  'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',
                  'x-rapidapi-key': process.env.RAPIDAPI_KEY
                }
              });
              
              fs.writeFileSync('./data/matches.json', JSON.stringify(response.data, null, 2));
              console.log('✅ تم تحديث البيانات بنجاح');
            } catch (error) {
              console.error('❌ خطأ في جلب البيانات:', error.message);
              const fallbackData = {
                response: [{
                  fixture: { id: 9999, date: today, status: { short: 'NS', long: 'Not Started' } },
                  teams: { home: { name: 'فريق افتراضي ١' }, away: { name: 'فريق افتراضي ٢' } },
                  league: { name: 'بطولة افتراضية' }
                }]
              };
              fs.writeFileSync('./data/matches.json', JSON.stringify(fallbackData, null, 2));
              console.log('⚠️ تم استخدام بيانات احتياطية');
            }
          }
          fetchMatches();
          "

      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add data/matches.json
          git diff --quiet || (git commit -m "تحديث تلقائي لبيانات المباريات [skip ci]" && git push)
